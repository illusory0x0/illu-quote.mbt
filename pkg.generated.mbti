// Generated using `moon info`, DON'T EDIT IT
package "illusory0x0/quote"

import(
  "moonbitlang/core/json"
)

// Values
#callsite(autofill(loc))
fn current_source_location(loc~ : SourceLoc) -> SourceLocation raise ParseSourceLocationError

#callsite(autofill(loc))
fn[Code] quote(Code, loc~ : SourceLoc) -> SourceLocation raise ParseSourceLocationError

// Errors
pub suberror ParseSourceLocationError {
  ParseError(String)
}
impl Show for ParseSourceLocationError
impl ToJson for ParseSourceLocationError
impl @json.FromJson for ParseSourceLocationError

// Types and methods
type AbsolutePath
fn AbsolutePath::from(Array[String]) -> Self
fn AbsolutePath::length(Self) -> Int
fn AbsolutePath::op_get(Self, Int) -> String
fn AbsolutePath::op_set(Self, Int, String) -> Unit
impl Show for AbsolutePath
impl ToJson for AbsolutePath
impl @json.FromJson for AbsolutePath

pub(all) struct Position {
  row : Int
  column : Int
}
impl Show for Position
impl ToJson for Position
impl @json.FromJson for Position

pub(all) struct SourceLocation {
  path : AbsolutePath
  start : Position
  end : Position
}
fn SourceLocation::parse(String) -> Self raise ParseSourceLocationError
fn SourceLocation::split_file(String, Array[Self]) -> Array[StringView]
impl Show for SourceLocation
impl ToJson for SourceLocation
impl @json.FromJson for SourceLocation

// Type aliases

// Traits

