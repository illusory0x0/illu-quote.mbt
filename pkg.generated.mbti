// Generated using `moon info`, DON'T EDIT IT
package "illusory0x0/quote"

import(
  "illusory0x0/path"
  "moonbitlang/core/json"
)

// Values
#callsite(autofill(loc))
fn current_source_location(loc~ : SourceLoc) -> SourceLocation raise ParseSourceLocationError

#callsite(autofill(loc))
fn[Code] quote(Code, loc~ : SourceLoc) -> SourceLocation raise ParseSourceLocationError

// Errors
pub suberror ParseSourceLocationError {
  ParseError(String)
}
impl Show for ParseSourceLocationError
impl ToJson for ParseSourceLocationError

// Types and methods
pub(all) struct Position {
  row : Int
  column : Int
}
impl Show for Position
impl ToJson for Position
impl @json.FromJson for Position

pub(all) struct SourceLocation {
  path : @path.Path
  start : Position
  end : Position
}
fn SourceLocation::parse(String) -> Self raise ParseSourceLocationError
fn SourceLocation::split_file(String, Array[Self]) -> Array[StringView]
impl Show for SourceLocation
impl ToJson for SourceLocation

// Type aliases
pub typealias @path.Path as Path

// Traits

